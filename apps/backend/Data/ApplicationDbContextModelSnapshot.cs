// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace Data
{
  [DbContext(typeof(ApplicationDbContext))]
  partial class ApplicationDbContextModelSnapshot : ModelSnapshot
  {
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("ProductVersion", "8.0.4")
          .HasAnnotation("Relational:MaxIdentifierLength", 63);

      NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "priority_enum", new[] { "low", "normal", "high", "critical" });
      NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

      modelBuilder.Entity("Models.List", b =>
          {
            b.Property<string>("Id")
                      .HasColumnType("text")
                      .HasColumnName("id");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnType("timestamp with time zone")
                      .HasColumnName("created_at");

            b.Property<string>("Name")
                      .IsRequired()
                      .HasColumnType("text")
                      .HasColumnName("name");

            b.Property<DateTime>("UpdatedAt")
                      .HasColumnType("timestamp with time zone")
                      .HasColumnName("updated_at");

            b.HasKey("Id");

            b.ToTable("lists");
          });

      modelBuilder.Entity("Models.Task", b =>
          {
            b.Property<string>("Id")
                      .HasColumnType("text")
                      .HasColumnName("id");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnType("timestamp with time zone")
                      .HasColumnName("created_at");

            b.Property<string>("Description")
                      .IsRequired()
                      .HasColumnType("text")
                      .HasColumnName("description");

            b.Property<DateTime>("DueAt")
                      .HasColumnType("timestamp with time zone")
                      .HasColumnName("due_at");

            b.Property<string>("ListId")
                      .IsRequired()
                      .HasColumnType("text")
                      .HasColumnName("list_id");

            b.Property<int>("Priority")
                      .HasColumnType("integer")
                      .HasColumnName("priority");

            b.Property<string>("Title")
                      .IsRequired()
                      .HasColumnType("text")
                      .HasColumnName("title");

            b.Property<DateTime>("UpdatedAt")
                      .HasColumnType("timestamp with time zone")
                      .HasColumnName("updated_at");

            b.HasKey("Id");

            b.HasIndex("ListId");

            b.ToTable("tasks");
          });

      modelBuilder.Entity("Models.Task", b =>
          {
            b.HasOne("Models.List", "List")
                      .WithMany("Tasks")
                      .HasForeignKey("ListId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.Navigation("List");
          });

      modelBuilder.Entity("Models.List", b =>
          {
            b.Navigation("Tasks");
          });
#pragma warning restore 612, 618
    }
  }
}